package com.self2.in;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.Query;

import com.self.in.Student;

public class StudentDao {

	public Student add(Student s) {
		EntityManagerFactory emf=Persistence.createEntityManagerFactory("learning-hibernate");
		EntityManager em=emf.createEntityManager();
		EntityTransaction tx = em.getTransaction();
		
		tx.begin();
		em.persist(s);
		tx.commit();
		emf.close();
		return s;	
	}
	public Student Fetch(int id) {
		EntityManagerFactory emf=Persistence.createEntityManagerFactory("learning-hibernate");
		EntityManager em=emf.createEntityManager();
        EntityTransaction tx = em.getTransaction();
       
       Student s=em.find(Student.class, id);
		emf.close();
		return s;	
		
	}
	public List<Student>fetchAll(){
		EntityManagerFactory emf=Persistence.createEntityManagerFactory("learning-hibernate");
		EntityManager em=emf.createEntityManager();
		
		Query q=em.createQuery("select s from Student s");//HQL/ JPQL //s for alies is optional
		List<Student>list=q.getResultList();
		emf.close();
		return list;
	}
	
	public List<String>fetchNAme(){
		EntityManagerFactory emf=Persistence.createEntityManagerFactory("learning-hibernate");
		EntityManager em=emf.createEntityManager();
		
		Query q=em.createQuery("select s.name from Student s");//HQL/ JPQL //s for alies is optional
		List<String>list=q.getResultList();
		emf.close();
		return list;
	}
	
	
	//<!------All  Fetch names----!>	
	
	public List<Object[]>fetchNAmeandCollege(){
	EntityManagerFactory emf=Persistence.createEntityManagerFactory("learning-hibernate");
	EntityManager em=emf.createEntityManager();
	
	Query q=em.createQuery("select s.name,s.college from Student s");//HQL/ JPQL //s for alies is optional
	List<Object[]>list=q.getResultList();
	emf.close();
	return list;

	
	}
	
	}


